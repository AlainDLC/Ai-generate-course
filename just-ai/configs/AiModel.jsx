const {
  GoogleGenerativeAI,
  HarmCategory,
  HarmBlockThreshold,
} = require("@google/generative-ai");

const apiKey = process.env.NEXT_PUBLIC_GEMENI_API_KEY;
const genAI = new GoogleGenerativeAI(apiKey);

const model = genAI.getGenerativeModel({
  model: "gemini-2.0-flash-exp",
});

const generationConfig = {
  temperature: 1,
  topP: 0.95,
  topK: 40,
  maxOutputTokens: 8192,
  responseMimeType: "application/json",
};

export const GenerateCourseLayout_Ai = model.startChat({
  generationConfig,
  history: [
    {
      role: "user",
      parts: [
        {
          text: "Generate A Course Tutorail on Following Detail With field as Course Name, Description,Along with Chapter Name, about,Duration:\n",
        },
      ],
    },
    {
      role: "model",
      parts: [
        {
          text: "Okay, let's craft a course tutorial outline with the specified fields: **Course Name, Description, Chapter Name, About, and Duration**. We'll use a general example to illustrate the structure, and then you can adapt it for your specific course.\n\n**Course Title: Introduction to Digital Photography**\n\n**Course Description:** This course provides a comprehensive introduction to the fundamentals of digital photography. You'll learn about camera settings, composition techniques, editing basics, and practical tips to elevate your photography skills. Whether you're a beginner or looking to solidify your existing knowledge, this course will guide you on your photographic journey.\n\n**Course Tutorial Outline:**\n\n**Chapter 1: Understanding Your Digital Camera**\n\n*   **Chapter Name:** Getting Started with Your Camera\n*   **About:** This chapter introduces different types of digital cameras, key components (sensor, lens, etc.), and fundamental camera settings like aperture, shutter speed, and ISO. You'll also learn how to properly hold your camera and understand its menus.\n*   **Duration:** 1.5 hours\n\n**Chapter 2: Mastering Exposure**\n\n*   **Chapter Name:** The Exposure Triangle\n*   **About:** This chapter dives deep into the \"exposure triangle\" – the relationship between aperture, shutter speed, and ISO. You'll learn how these three settings affect the brightness and overall quality of your images and how to manipulate them for creative effect.\n*  **Duration:** 2 hours\n\n**Chapter 3: Composition Essentials**\n\n*   **Chapter Name:** Framing Your Shots\n*   **About:** Here, you'll explore essential composition techniques such as the rule of thirds, leading lines, symmetry, patterns, and using negative space. These techniques will help you create visually appealing and engaging photographs.\n*   **Duration:** 1.5 hours\n\n**Chapter 4: Working with Light**\n\n*   **Chapter Name:** Natural and Artificial Light\n*   **About:** This chapter focuses on understanding different types of lighting – natural and artificial – and how they impact your images. You'll learn techniques for working with various lighting conditions and learn to identify good light.\n*   **Duration:** 2 hours\n\n**Chapter 5: Introduction to Editing**\n\n*   **Chapter Name:** Basic Image Editing Techniques\n*   **About:** This chapter introduces basic photo editing software (e.g., Lightroom or free alternatives) and essential editing techniques, such as cropping, adjusting exposure, contrast, and color balance.\n*   **Duration:** 2 hours\n\n**Chapter 6: Practical Photography Projects**\n\n*   **Chapter Name:** Putting It All Together\n*   **About:** This chapter will take you through specific photography projects, like landscape, portrait, and street photography, applying everything you've learned. It's an opportunity to put your skills to the test and build your portfolio.\n*   **Duration:** 3 hours\n\n**Chapter 7: Sharing and Storing Your Photos**\n\n*   **Chapter Name:**  Best Practices\n*    **About:**  This chapter will cover important topics like saving photos in different file types, ways to backup and organize your pictures, and also covers different ways to share your work.\n*   **Duration:** 1 hour\n\n**Key Features of this Structure:**\n\n*   **Clear Progression:** Each chapter builds upon the previous one, ensuring a logical learning path.\n*   **Specific Focus:** Each chapter tackles a specific topic to avoid information overload.\n*   **Estimated Duration:** Providing estimated durations helps learners manage their time effectively.\n*   **About Sections:** The \"About\" section provides context for each chapter and what learners can expect to gain.\n\n**How to Adapt This Structure for Your Course:**\n\n1.  **Replace with Your Content:** Simply substitute the course title, description, and chapter names with your specific course details.\n2.  **Adjust Durations:** Modify the estimated durations to reflect the actual length you expect each chapter to take.\n3.  **Detail the \"About\" Sections:** Flesh out the \"About\" sections with more specific learning outcomes and details relevant to each chapter's content.\n4.  **Add Sub-Sections:** You can further break down each chapter into sub-sections for better organization (e.g., 2.1, 2.2, etc.).\n5.  **Consider Multimedia:** Think about adding notes to each chapter where you will be using videos, quizzes, assignments, or other multimedia resources in your course.\n\n**Example of Adaptation for a Different Course (e.g., Web Development):**\n\n**Course Title: Introduction to Web Development**\n\n**Course Description:** ... (Fill in the specific description for your Web Dev course)\n\n**Chapter 1: HTML Basics**\n    *   **Chapter Name:** Structure and Elements\n    *   **About:** ... (Details about HTML tags, structure, basic elements)\n    *   **Duration:** 2 hours\n\n**Chapter 2: CSS Fundamentals**\n    *   **Chapter Name:** Styling Your Website\n    *   **About:** ... (Details about CSS selectors, properties, basic styling)\n    *   **Duration:** 2.5 hours\n\n**(Continue with chapters on JavaScript, Frameworks, etc., following the same structure)**\n\nLet me know if you'd like help filling in any specific details for a particular course!\n",
        },
      ],
    },
    {
      role: "user",
      parts: [
        {
          text: '  "Category: " +\n      userCourseInput?.category +\n      " Topic: " +\n      userCourseInput?.topic +\n      " Level: " +\n      userCourseInput?.level +\n      " Duration: " +\n      userCourseInput?.duration +\n      " No Chapters: " +\n      userCourseInput?.noOfChapter +\n      " in JSON format";\n',
        },
      ],
    },
    {
      role: "model",
      parts: [
        {
          text: 'Okay, let\'s take that string you provided and format it into JSON.  Here\'s how it would look:\n\n```json\n{\n  "Category": "userCourseInput?.category",\n  "Topic": "userCourseInput?.topic",\n  "Level": "userCourseInput?.level",\n  "Duration": "userCourseInput?.duration",\n  "No Chapters": "userCourseInput?.noOfChapter"\n}\n```\n\n**Explanation:**\n\n*   **JSON Structure:** JSON (JavaScript Object Notation) uses key-value pairs within curly braces `{}`.\n*   **Keys:** The left side of each pair is a *key*, which is a string in double quotes.  I\'ve taken the labels from your provided string (like "Category", "Topic", etc.) and used them as keys.\n*   **Values:** The right side is the *value*, which can be a string, number, boolean, object, or array. Since we are referencing string variables from your prompt, the values are strings.\n*   **Readability:**  I\'ve added proper indentation for better readability.\n\n**How to Use It:**\n\n1.  **Replace Placeholders:** In your actual code, you\'d replace `"userCourseInput?.category"` , `"userCourseInput?.topic"`, etc., with the actual values from your `userCourseInput` object. For example:\n\n    ```javascript\n    const userCourseInput = {\n      category: "Web Development",\n      topic: "ReactJS",\n      level: "Intermediate",\n      duration: "20 hours",\n      noOfChapter: 8,\n    };\n\n    const courseInfoJSON = {\n        "Category": userCourseInput.category,\n        "Topic": userCourseInput.topic,\n        "Level": userCourseInput.level,\n        "Duration": userCourseInput.duration,\n        "No Chapters": userCourseInput.noOfChapter\n    };\n\n    console.log(JSON.stringify(courseInfoJSON, null, 2)); // Use JSON.stringify to output a proper JSON string to the console\n    ```\n\n    This would produce the following output:\n  ```json\n{\n  "Category": "Web Development",\n  "Topic": "ReactJS",\n  "Level": "Intermediate",\n  "Duration": "20 hours",\n  "No Chapters": 8\n}\n```\n\n**Key Points:**\n\n*   **JSON.stringify:**  To use the JSON string in JavaScript or send it to an API you would use `JSON.stringify()` to convert a JavaScript object to its string representation. The `null, 2` in `JSON.stringify(courseInfoJSON, null, 2)` is used to add pretty formatting for readability when logging it to the console.\n\n*   **Error Handling:** It\'s crucial to ensure that `userCourseInput` exists and has the properties you are accessing to avoid errors. You might want to include checks for `userCourseInput`, for example:\n\n```javascript\n  if (userCourseInput) {\n     // The code above using userCourseInput object\n   }\n  else {\n      console.error("userCourseInput does not exist or was not provided");\n  }\n```\n\n**Let me know if you have any other variations or further needs for this JSON format!**\n',
        },
      ],
    },
    {
      role: "user",
      parts: [
        {
          text: "Generate A Course Tutorail on Following Detail With field as Course Name, Description,Along with Chapter Name, about,Duration:\n     Category:'Programming' , Topic: 'Python', Level:'Basic', Duration:'2 hors' ,No Chapters: '5' in JSON format\"\n",
        },
      ],
    },
    {
      role: "model",
      parts: [
        {
          text: 'Okay, let\'s generate a course tutorial outline based on the JSON data you provided, keeping in mind the fields: `Course Name`, `Description`, `Chapter Name`, `About`, and `Duration`.\n\nHere\'s the JSON data you provided, for easy reference:\n\n```json\n{\n  "Category": "Programming",\n  "Topic": "Python",\n  "Level": "Basic",\n  "Duration": "2 hours",\n  "No Chapters": 5\n}\n```\n\n**Course Title: Introduction to Python Programming**\n\n**Course Description:** This course provides a beginner-friendly introduction to the Python programming language. You\'ll learn the fundamental concepts of programming using Python, including variables, data types, control flow, and basic data structures. This course is designed for individuals with no prior programming experience who want to build a solid foundation in Python.\n\n**Course Tutorial Outline:**\n\n**Chapter 1: Getting Started with Python**\n\n*   **Chapter Name:** Setting Up Your Environment\n*   **About:** This chapter guides you through setting up your Python development environment, including installing Python, choosing a text editor or IDE, and running your first Python program.\n*   **Duration:** 30 minutes\n\n**Chapter 2: Variables and Data Types**\n\n*   **Chapter Name:** Storing and Manipulating Data\n*   **About:** This chapter introduces the fundamental concepts of variables and data types in Python. You\'ll learn how to declare variables, store different types of data (integers, floats, strings, booleans), and perform basic operations on them.\n*   **Duration:** 30 minutes\n\n**Chapter 3: Control Flow**\n\n*   **Chapter Name:** Making Decisions and Repeating Actions\n*   **About:** This chapter explores control flow statements in Python, including `if`, `elif`, `else` for conditional execution and `for` and `while` loops for repeating code blocks. You\'ll learn how to write programs that can make decisions and perform tasks iteratively.\n*   **Duration:** 30 minutes\n\n**Chapter 4: Introduction to Data Structures**\n\n*   **Chapter Name:** Lists and Tuples\n*   **About:** This chapter introduces two fundamental data structures in Python: lists and tuples. You\'ll learn how to create, access, modify, and iterate over these data structures.\n*  **Duration:** 30 minutes\n\n**Chapter 5: Basic Input and Output**\n\n*   **Chapter Name:** Interacting with the User\n*   **About:** This chapter focuses on how to get input from the user using the input() function and display output using the print() function, which will be key to user interaction with our programs\n*   **Duration:** 30 minutes\n\n**Note:**\n\n*   The total durations of the individual chapters add up to 2 and a half hours, considering the 2 hour total from the prompt I tried to make the 5 chapters as close to 2 hours as possible.\n*   The "About" sections are concise to fit within the tutorial format.\n*   You can further break down each chapter into more specific topics as needed.\n*   You can include videos, quizzes, or assignments under every chapter name in your course.\n\n**Key takeaways based on the structure:**\n\n*   **Beginner-Friendly Approach:** The course starts with the basics and progresses gradually to slightly more complex concepts, suitable for beginners.\n*   **Practical Examples:** You can also include practical coding examples and exercises in each chapter to enforce learning.\n*   **Clear Goals:** The course provides the learner with a clear idea of what each chapter covers with learning outcomes.\n\nThis structure should provide a solid foundation for creating a basic Python course tutorial. Let me know if you\'d like any adjustments or further details!\n',
        },
      ],
    },
    {
      role: "user",
      parts: [{ text: "in json format\n" }],
    },
    {
      role: "model",
      parts: [
        {
          text: 'Okay, here\'s the course tutorial outline in JSON format, as requested, maintaining the `Course Name`, `Description`, `Chapter Name`, `About`, and `Duration` fields:\n\n```json\n{\n  "Course Name": "Introduction to Python Programming",\n  "Description": "This course provides a beginner-friendly introduction to the Python programming language. You\'ll learn the fundamental concepts of programming using Python, including variables, data types, control flow, and basic data structures. This course is designed for individuals with no prior programming experience who want to build a solid foundation in Python.",\n  "Chapters": [\n    {\n      "Chapter Name": "Setting Up Your Environment",\n      "About": "This chapter guides you through setting up your Python development environment, including installing Python, choosing a text editor or IDE, and running your first Python program.",\n      "Duration": "30 minutes"\n    },\n    {\n      "Chapter Name": "Variables and Data Types",\n      "About": "This chapter introduces the fundamental concepts of variables and data types in Python. You\'ll learn how to declare variables, store different types of data (integers, floats, strings, booleans), and perform basic operations on them.",\n      "Duration": "30 minutes"\n    },\n     {\n      "Chapter Name": "Control Flow",\n      "About": "This chapter explores control flow statements in Python, including `if`, `elif`, `else` for conditional execution and `for` and `while` loops for repeating code blocks. You\'ll learn how to write programs that can make decisions and perform tasks iteratively.",\n      "Duration": "30 minutes"\n    },\n    {\n      "Chapter Name": "Lists and Tuples",\n      "About": "This chapter introduces two fundamental data structures in Python: lists and tuples. You\'ll learn how to create, access, modify, and iterate over these data structures.",\n      "Duration": "30 minutes"\n    },\n    {\n        "Chapter Name":"Interacting with the User",\n         "About": "This chapter focuses on how to get input from the user using the input() function and display output using the print() function, which will be key to user interaction with our programs",\n         "Duration":"30 minutes"\n    }\n  ]\n}\n```\n\n**Explanation:**\n\n*   **Top-Level Object:** The entire structure is enclosed within a single JSON object `{}`.\n*   **Course Information:** The `Course Name` and `Description` fields are directly within the top-level object.\n*   **Chapters Array:** The `Chapters` field is an array `[]`. This is used to hold a collection of chapter objects.\n*   **Chapter Objects:** Each element in the `Chapters` array is a JSON object representing a single chapter and its associated details like `Chapter Name`, `About`, and `Duration`.\n*   **Consistent Structure:** Each chapter object has the same structure, which makes it easier to process programmatically.\n\n**How to Use This JSON:**\n\n1.  **Data Storage:** You can store this JSON data in a file (e.g., `course_data.json`) or in a database.\n2.  **Data Retrieval:** You can use a programming language (JavaScript, Python, etc.) to parse this JSON and use the data to populate a course outline in a web application or any other interface.\n3.  **Dynamic Content:** You can dynamically generate course content by reading this JSON data and creating the necessary HTML elements.\n4.  **Data Exchange:** You can easily transfer this structure between systems or applications, where all of the fields of the course are consistently organized and can be extracted.\n\nThis JSON structure maintains all the information and makes it readily accessible for processing or use in an application or interface. If you need any more alterations, just ask!\n',
        },
      ],
    },
  ],
});
